# Copyright 2018 ETH Zurich and University of Bologna.
# Copyright and related rights are licensed under the Solderpad Hardware
# License, Version 0.51 (the "License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://solderpad.org/licenses/SHL-0.51. Unless required by applicable law
# or agreed to in writing, software, hardware and materials distributed under
# this License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.
#
# Author: Michael Schaffner <schaffner@iis.ee.ethz.ch>, ETH Zurich
# Date: 26.11.2018
# Description: GitLab CI configuration script.

  
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FPGA_LOG_FILE: fpga.log
  BITSTREAM: system_${CI_PIPELINE_ID}.bit
  BOOT_SCRIPT: /home/dmazure/pcie/linux_images/boot_ariane.sh 
  BBL: /home/dmazure/pcie/linux_images/bbl8.bin
  TOOLS_DIR: /home/tools/scripts
  QDMA_DRIVERS: /home/dmazure/git_repo/dma_ip_drivers/QDMA/linux-kernel/bin
  GOLDEN_MESSAGE: "Welcome to Buildroot"

stages:
  - protosyn
  - implementation
  - bitstream
  - fpga-test

###################################
# setup tools

synthesis:
  tags: 
    - MEEP_FPGA 
  timeout: 4h
  stage: protosyn
  before_script:
    - git submodule update --init --recursive
    - export PITON_ROOT=`pwd`
  script:
    - echo "ROOT= $PITON_ROOT"
    - source piton/ariane_setup.sh
    - source piton/ariane_build_tools.sh
    - echo "RISCV = $RISCV"
    - echo "VIVADO = $VIVADO_BIN"
    - make initialize
      #- protosyn --board alveou280 --design system --core ariane --x_tiles 1 --y_tiles 1 --uart-dmw ddr --zeroer_off --vnpm
    - cp -r build/alveo280/system/protosyn_logs .

  artifacts:
       when: always
       paths: 
         - protosyn_logs
         - dcp/synthesis.dcp

implementation:
        stage: implementation
        timeout: 4h
        tags:
            - MEEP_FPGA
        before_script:
            - echo -e "Implementation stage"
        script:
            - make implementation

        dependencies:
            - synthesis

        artifacts:
            when: on_success
            expire_in: 1 day
            paths:
                - reports
                - dcp/implementation.dcp
bitstream:
        stage: bitstream
        tags:
            - MEEP_FPGA
        script:
            - make bitstream
        after_script:
            - mv bitstream/*.bit bitstream/$BITSTREAM
        dependencies:
            - synthesis
            - implementation
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - bitstream

fpga-test:
        stage: fpga-test
        tags:
            - FPGA_TEST
        before_script:
            - export PATH=$PATH:$QDMA_DRIVERS
            - $TOOLS_DIR/givememyuart
        script:
            - $TOOLS_DIR/load_bitstream.sh qdma bitstream/$BITSTREAM
            - cat /dev/ttyUSB2 115200 > $FPGA_LOG_FILE &
            - source $BOOT_SCRIPT $BBL
            - sleep 60
            - sudo pkill cat
            - echo "Checking FPGA log ..."
            - $TOOLS_DIR/check_fpga_log.sh $FPGA_LOG_FILE $GOLDEN_MESSAGE
        dependencies:
            - bitstream
        artifacts:
            when: always
            paths:
            - $FPGA_LOG_FILE
                  
