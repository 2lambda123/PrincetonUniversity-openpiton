# Author: Daniel J.Mazure
# Date: 29.09.2021
# Description: GitLab CI configuration script.

# Tests over the FPGA set to manual temporarily until one specific machine is devoted 
# to that task.
#
# The CI/CD flow generates a bitstream both for Lagarto and Ariane. The synthesis and
# implementation scripts run by Vivado doesn't differentiate and search the dcp files
# in a general folder (./dcp). Files are moved in this script to create separate 
# artifacts for both implementations.
#
# More jobs can be created if we want to check different number of cores. It is currently
# set to a generic 2x2 configuration.
  
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  FPGA_LOG_FILE: fpga.log
  BITSTREAM: system_${CI_PIPELINE_ID}.bit
  BOOT_SCRIPT: boot_ariane.sh 
  BOOTLOADER: /home/dmazure/pcie/linux_images/bbl8.bin
  TOOLS_DIR: /home/fpga-runnerMEEP/tools/scripts
  QDMA_DRIVERS: /home/dmazure/git_repo/dma_ip_drivers/QDMA/linux-kernel/bin
  DESIGN_OPTIONS: "XTILES=2 YTILES=2"
  GOLDEN_MESSAGE: "Welcome to Buildroot"

stages:
  - protosyn
  - implementation
  - bitstream
  - validation
  - fpga-test

###################################
# Synthesis
###################################

synthesis-ariane:
        stage: protosyn
        tags: 
            - MEEP_FPGA 
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule") 
        timeout: 6h
        
        before_script:
            - export PITON_ROOT=`pwd`
            - mkdir -p ariane
              #- git submodule update --init --recursive
        script:
            - echo "ROOT= $PITON_ROOT"
            - source piton/ariane_setup.sh
            - make initialize CORE=ariane
            - echo "RISCV = $RISCV"
            - echo "VIVADO = $VIVADO_BIN"
            - make protosyn $DESIGN_OPTIONS CORE=ariane
        after_script:
            - cp -rf build/alveou280/system/protosyn_logs ariane
            - cp -rf dcp ariane

        artifacts:
            when: always
            paths:        
                - ariane

synthesis-lagarto:
        stage: protosyn
        tags:
            - MEEP_FPGA
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule") 
        timeout: 6h        
        before_script:
            - export PITON_ROOT=`pwd`
            - mkdir -p lagarto
              #- git submodule update --init --recursive
        script:
            - echo "ROOT= $PITON_ROOT"
            - source piton/lagarto_setup.sh
            - make initialize CORE=lagarto
            - echo "RISCV = $RISCV"
            - echo "VIVADO = $VIVADO_BIN"
            - make protosyn $DESIGN_OPTIONS CORE=lagarto
        after_script:
            - mkdir -p lagarto
            - cp -rf build/alveou280/system/protosyn_logs lagarto
            - cp -rf dcp lagarto

        artifacts:
            when: always
            paths:
                - lagarto

###################################
# Implementation
###################################           

implementation-ariane:
        stage: implementation
        needs:
            - synthesis-ariane
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
        timeout: 12h
        tags:
            - MEEP_FPGA
        before_script:
            - echo -e "Implementation stage"
            - cp -rf ariane/dcp .
        script:
            - make implementation
        after_script:
            - cp -rf dcp/implementation.dcp ariane/dcp
            - cp -rf reports ariane            
            - ls ariane/dcp

        dependencies:
            - synthesis-ariane

        artifacts:
            when: on_success
            expire_in: 1 day
            paths:
                - ariane/dcp/implementation.dcp
                - lagarto/reports

implementation-lagarto:
        stage: implementation
        needs:
            - synthesis-lagarto
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
        timeout: 12h
        tags:
            - MEEP_FPGA
        before_script:
            - echo -e "Implementation stage"
            - cp -rf lagarto/dcp .
        script:
            - make implementation
        after_script:
            - cp -rf dcp/implementation.dcp lagarto/dcp
            - cp -rf reports lagarto
            - ls lagarto/dcp

        dependencies:
            - synthesis-lagarto

        artifacts:
            when: on_success
            expire_in: 1 day
            paths:
                - lagarto/dcp/implementation.dcp
                - lagarto/reports

###################################
# Bitstream
###################################                 

bitstream-ariane:
        stage: bitstream
        needs:
            - synthesis-ariane
            - implementation-ariane
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
        tags:
            - MEEP_FPGA
        before_script:
            - cp -rf ariane/dcp .
            - mkdir -p ariane/bitstream
        script:
            - make bitstream
        after_script:
            - mv bitstream/*.bit ariane/bitstream/ariane_$BITSTREAM
        dependencies:
            - synthesis-ariane
            - implementation-ariane
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - ariane/bitstream

bitstream-lagarto:
        stage: bitstream
        needs:
            - synthesis-lagarto
            - implementation-lagarto
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
        tags:
            - MEEP_FPGA
        before_script:            
            - cp -rf lagarto/dcp .
            - mkdir -p lagarto/bitstream
        script:
            - make bitstream
        after_script:
            - mv bitstream/*.bit lagarto/bitstream/lagarto_$BITSTREAM
        dependencies:
            - synthesis-lagarto
            - implementation-lagarto
        artifacts:
            when: always
            expire_in: 1 month
            paths:
                - ariane/bitstream
                  
###################################
# Validation
###################################
                  
validation-ariane:
        stage: validation
        needs: 
            - implementation-ariane        
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
        tags:
            - MEEP_FPGA
        before_script:            
            - cp -rf ariane/reports .
        script:
            - echo "Checking implementation reports ..."
            - source $TOOLS_DIR/check_reports.sh
        allow_failure: true
        dependencies:
            - implementation-ariane

validation-lagarto:
        stage: validation
        needs: 
            - implementation-lagarto        
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
        tags:
            - MEEP_FPGA
        before_script:
            - cp -rf lagarto/reports .
        script:
            - echo "Checking implementation reports ..."
            - source $TOOLS_DIR/check_reports.sh
        allow_failure: true
        dependencies:
            - implementation-lagarto

###################################
# HW Test (Set to manual temporarily)
###################################              
                            
fpga-test-ariane:
        stage: fpga-test
        needs:
            - synthesis-ariane
            - implementation-ariane
            - bitstream-ariane        
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
              #when: manual         
        tags:
            - FPGA_TEST
        before_script:
            - export PATH=$PATH:$QDMA_DRIVERS
            - $TOOLS_DIR/givememyuart
        script:
            - $TOOLS_DIR/load-bitstream.sh qdma ariane/bitstream/ariane_$BITSTREAM
            - source $TOOLS_DIR/$BOOT_SCRIPT $BOOTLOADER
            - source $TOOLS_DIR/fpga_test.sh $FPGA_LOG_FILE 
            - $TOOLS_DIR/check_fpga_log.sh $FPGA_LOG_FILE $GOLDEN_MESSAGE
        after_script:
            - cp $FPGA_LOG_FILE ariane
        dependencies:
            - bitstream-ariane
        artifacts:
            when: always
            paths:
                - ariane
                  
fpga-test-lagarto:
        stage: fpga-test
        needs:
            - synthesis-lagarto
            - implementation-lagarto
            - bitstream-lagarto  
        rules:
            - if: ($CI_COMMIT_BRANCH == "production" || $CI_PIPELINE_SOURCE == "schedule")            
              #when: manual      
        tags:
            - FPGA_TEST
        before_script:
            - export PATH=$PATH:$QDMA_DRIVERS
            - $TOOLS_DIR/givememyuart
        script:
            - $TOOLS_DIR/load-bitstream.sh qdma lagarto/bitstream/lagarto_$BITSTREAM
            - source $TOOLS_DIR/$BOOT_SCRIPT $BOOTLOADER
            - source $TOOLS_DIR/fpga_test.sh $FPGA_LOG_FILE
            - $TOOLS_DIR/check_fpga_log.sh $FPGA_LOG_FILE $GOLDEN_MESSAGE
        after_script:
            - cp $FPGA_LOG_FILE lagarto
        dependencies:
            - bitstream-lagarto
        artifacts:
            when: always
            paths:
                - lagarto

              
